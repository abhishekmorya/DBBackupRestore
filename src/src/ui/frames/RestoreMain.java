/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package src.ui.frames;

import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import src.lib.master.RestoreMaster;
import src.lib.service.ConnDetail;
import src.lib.service.DBDetails;
import src.lib.service.Path;
import src.lib.service.Status;

/**
 *
 * @author ASUS
 */
public class RestoreMain extends javax.swing.JFrame {

    /**
     * Creates new form RestoreMain
     */
    private static int matched = -1;
    

    public RestoreMain() {
        initComponents();
        this.Table.getColumnModel().getColumn(0).setMaxWidth(80);
        this.Table.getColumnModel().getColumn(1).setPreferredWidth(120);
        Path.setOutputPath(this.OutputFolder.getText().trim());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Back = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        Dataserver = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        URL = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        Username = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Fetch = new javax.swing.JButton();
        New = new javax.swing.JButton();
        Save = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        OutputFolder = new javax.swing.JTextField();
        Change = new javax.swing.JButton();
        Password = new javax.swing.JPasswordField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        Schema = new javax.swing.JComboBox<>();
        FetchTables = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane3 = new javax.swing.JScrollPane();
        Table = new javax.swing.JTable();
        Search = new javax.swing.JTextField();
        SelectAll = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        Invert = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        Restore = new javax.swing.JButton();
        Clear = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        next = new javax.swing.JButton();
        pre = new javax.swing.JButton();
        BackupData = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(800, 600));

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(800, 52));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Restore Data");

        Back.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 571, Short.MAX_VALUE)
                .addComponent(Back)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Back)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel3.setPreferredSize(new java.awt.Dimension(776, 174));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("Dataserver");

        Dataserver.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Dataserver.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Dataserver", "Mysql", "Oracle" }));
        Dataserver.setPreferredSize(new java.awt.Dimension(200, 25));
        Dataserver.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                DataserverItemStateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("URL");

        URL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        URL.setPreferredSize(new java.awt.Dimension(200, 25));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setText("User Name");

        Username.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Username.setPreferredSize(new java.awt.Dimension(200, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("Password");

        Fetch.setBackground(new java.awt.Color(153, 255, 204));
        Fetch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Fetch.setText("Fatch Details");
        Fetch.setPreferredSize(new java.awt.Dimension(150, 25));
        Fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FetchActionPerformed(evt);
            }
        });

        New.setBackground(new java.awt.Color(153, 255, 204));
        New.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        New.setText("New");
        New.setPreferredSize(new java.awt.Dimension(150, 25));
        New.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewActionPerformed(evt);
            }
        });

        Save.setBackground(new java.awt.Color(153, 255, 204));
        Save.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Save.setText("Save Password");
        Save.setEnabled(false);
        Save.setPreferredSize(new java.awt.Dimension(150, 25));
        Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel8.setText("Output Folder");

        OutputFolder.setEditable(false);
        OutputFolder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OutputFolder.setText("C:\\\\Users\\\\ASUS\\\\Documents");
        OutputFolder.setPreferredSize(new java.awt.Dimension(200, 25));

        Change.setBackground(new java.awt.Color(153, 255, 204));
        Change.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Change.setText("Change");
        Change.setToolTipText("");
        Change.setPreferredSize(new java.awt.Dimension(90, 25));
        Change.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeActionPerformed(evt);
            }
        });

        Password.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Password.setPreferredSize(new java.awt.Dimension(200, 25));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(Fetch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(New, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(OutputFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Dataserver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addGap(34, 34, 34)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(URL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Dataserver, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(URL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(OutputFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Change, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Fetch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(New, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Save, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBackground(new java.awt.Color(204, 255, 153));
        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setPreferredSize(new java.awt.Dimension(676, 400));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("Schema");

        Schema.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Schema.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Schema" }));
        Schema.setPreferredSize(new java.awt.Dimension(200, 25));

        FetchTables.setBackground(new java.awt.Color(153, 255, 204));
        FetchTables.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        FetchTables.setText("Fatch Tables");
        FetchTables.setPreferredSize(new java.awt.Dimension(120, 25));
        FetchTables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FetchTablesActionPerformed(evt);
            }
        });

        jSeparator1.setPreferredSize(new java.awt.Dimension(776, 3));

        Table.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Selected", "Table Name", "Detail Backup", "Data Backup"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Table.getTableHeader().setResizingAllowed(false);
        Table.getTableHeader().setReorderingAllowed(false);
        jScrollPane3.setViewportView(Table);

        Search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Search.setPreferredSize(new java.awt.Dimension(200, 25));

        SelectAll.setBackground(new java.awt.Color(153, 255, 204));
        SelectAll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        SelectAll.setText("Select All");
        SelectAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllActionPerformed(evt);
            }
        });

        Reset.setBackground(new java.awt.Color(153, 255, 204));
        Reset.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Invert.setBackground(new java.awt.Color(153, 255, 204));
        Invert.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Invert.setText("Invert");
        Invert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InvertActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(102, 255, 204));
        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Restore.setBackground(new java.awt.Color(153, 255, 204));
        Restore.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Restore.setText("Restore");
        Restore.setPreferredSize(new java.awt.Dimension(130, 25));
        Restore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RestoreActionPerformed(evt);
            }
        });

        Clear.setBackground(new java.awt.Color(153, 255, 204));
        Clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        Clear.setText("Clear Restored");
        Clear.setPreferredSize(new java.awt.Dimension(130, 25));
        Clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Restore, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Clear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Restore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Clear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(205, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setText("Search");

        next.setBackground(new java.awt.Color(153, 255, 204));
        next.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        next.setText(">");
        next.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextActionPerformed(evt);
            }
        });

        pre.setBackground(new java.awt.Color(153, 255, 204));
        pre.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pre.setText("<");
        pre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                preActionPerformed(evt);
            }
        });

        BackupData.setBackground(new java.awt.Color(204, 255, 153));
        BackupData.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BackupData.setText("Restore Tables Data");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(18, 18, 18)
                                .addComponent(Schema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FetchTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(SelectAll)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Reset)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Invert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BackupData)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Search, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(next)))
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Schema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FetchTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)
                            .addComponent(next)
                            .addComponent(pre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(13, 13, 13)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectAll)
                    .addComponent(Invert)
                    .addComponent(Reset)
                    .addComponent(BackupData))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 653, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DataserverItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_DataserverItemStateChanged
        // Dataserver Combobox
        String item = Dataserver.getSelectedItem().toString();
        if (item.equals("Mysql")) {
            this.URL.setText(DBDetails.SQL_URL);
            this.Username.setText(DBDetails.SQL_USER);
            this.Password.setText("");
        } else if (item.equals("Oracle")) {
            this.URL.setText(DBDetails.ORACLE_URL);
            this.Username.setText("");
            this.Password.setText("");
        } else if (item.equals("Select Dataserver")) {
            this.URL.setText("");
            this.Username.setText("");
            this.Password.setText("");
        }
    }//GEN-LAST:event_DataserverItemStateChanged

    private void FetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FetchActionPerformed
        // Fatch Details Button
        RestoreMaster master = new RestoreMaster();
        boolean isData = this.BackupData.isSelected();

        List<String> list = master.schemaList(isData);
        this.Schema.removeAllItems();
        this.Schema.addItem("Select Schema");
        list.forEach((str) -> {
            this.Schema.addItem(str);
        });
    }//GEN-LAST:event_FetchActionPerformed

    private void NewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewActionPerformed
        // New Button
        NewDataserverDetails dialog = new NewDataserverDetails(this, true);
        dialog.setVisible(true);
        List<String> list = dialog.schemaList;
        //        System.out.println("Name: "+dialog.name);
        //        System.out.println("For Name: "+dialog.forName);
        //        System.out.println("URL: "+dialog.url);
        //        System.out.println("User Name: "+dialog.username);
        //        System.out.println("Password: "+dialog.password);
        //        System.out.println("Save: "+dialog.save);

    }//GEN-LAST:event_NewActionPerformed

    private void SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveActionPerformed
        // Save Password Button
    }//GEN-LAST:event_SaveActionPerformed

    private void ChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeActionPerformed
        // Change Output Folder Button
        String path = this.OutputFolder.getText();
        JFileChooser chooser = new JFileChooser(path);
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int r = chooser.showDialog(this, "Change");
        if (r == JFileChooser.APPROVE_OPTION) {
            path = chooser.getSelectedFile().getAbsolutePath();
        }
        this.OutputFolder.setText(path);
        Path.setOutputPath(path);
    }//GEN-LAST:event_ChangeActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        // TODO add your handling code here:
        Welcome w = new Welcome();
        w.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackActionPerformed

    private void FetchTablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FetchTablesActionPerformed
        // Fatch Tables Button
        List<String> tables = null;
        if (this.Schema.getSelectedIndex() == 0) {
            JOptionPane.showMessageDialog(this, "Please select a schema.", "", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String schemaName = this.Schema.getSelectedItem().toString().trim();
        RestoreMaster master = new RestoreMaster();
        boolean isData = this.BackupData.isSelected();
        tables = master.tableList(schemaName, isData);

        DefaultTableModel model = new DefaultTableModel(new Object[]{"Selected", "Table Name"}, tables.size()) {
            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return columnIndex == 0 ? Boolean.class : super.getColumnClass(columnIndex);
            }
        };

        for (int i = 0; i < tables.size(); i++) {
            model.setValueAt(false, i, 0);
            model.setValueAt(tables.get(i), i, 1);
        }
        this.Table.setModel(model);
        this.Table.getColumnModel().getColumn(0).setMaxWidth(80);
        this.Table.getColumnModel().getColumn(1).setPreferredWidth(120);
    }//GEN-LAST:event_FetchTablesActionPerformed

    private void SelectAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllActionPerformed
        // Select All Button
        TableModel model = this.Table.getModel();
        for (int i = 0; i < this.Table.getRowCount(); i++) {
            model.setValueAt(true, i, 0);
        }
    }//GEN-LAST:event_SelectAllActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
        // Reset Button
        TableModel model = this.Table.getModel();
        for (int i = 0; i < this.Table.getRowCount(); i++) {
            model.setValueAt(false, i, 0);
        }
        this.Table.removeRowSelectionInterval(0, this.Table.getRowCount() - 1);
    }//GEN-LAST:event_ResetActionPerformed

    private void InvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InvertActionPerformed
        // Invert Button
        TableModel model = this.Table.getModel();
        for (int i = 0; i < this.Table.getRowCount(); i++) {
            model.setValueAt(!((boolean) model.getValueAt(i, 0)), i, 0);
        }
    }//GEN-LAST:event_InvertActionPerformed

    private void RestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RestoreActionPerformed
        // Restore Button
        int selected = this.Dataserver.getSelectedIndex();
        List<String> tableList = new ArrayList<>();
        RestoreMaster master = new RestoreMaster();
        boolean isData = this.BackupData.isSelected();
        if (selected == 0) {
            JOptionPane.showMessageDialog(this, "Please select a dataserver", "", JOptionPane.OK_OPTION);
        } else if (selected == 1) {
            ConnDetail.setForName(DBDetails.SQL_FORNAME);
            ConnDetail.setUrl(this.URL.getText());
            ConnDetail.setUser(this.Username.getText());
            ConnDetail.setPass(this.Password.getText());
        } else if (selected == 2) {
            ConnDetail.setForName(DBDetails.ORACLE_FORNAME);
            ConnDetail.setUrl(this.URL.getText());
            ConnDetail.setUser(this.Username.getText());
            ConnDetail.setPass(this.Password.getText());
        }
        
        for(int i =0; i < this.Table.getRowCount(); i++){
            if((boolean)this.Table.getValueAt(i, 0)){
                tableList.add(this.Table.getValueAt(i, 1).toString());
            }
        }
        if(this.Schema.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Please select a schema.", "", JOptionPane.INFORMATION_MESSAGE);
            return;
        }
        String schemaName = this.Schema.getSelectedItem().toString().trim();
        master.restoreDetails(schemaName, tableList);
        
        if(Status.isStatus()){
            JOptionPane.showMessageDialog(this, Status.getMessage(), "", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, Status.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
        
        if(Status.isStatus() && isData){
            master.restoreData(schemaName, tableList);
            if(Status.isStatus())
                JOptionPane.showMessageDialog(this, Status.getMessage(), "", JOptionPane.INFORMATION_MESSAGE);
            else
                JOptionPane.showMessageDialog(this, Status.getMessage(), "", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_RestoreActionPerformed

    private void ClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearActionPerformed
        // Clear Restore Button
        
    }//GEN-LAST:event_ClearActionPerformed

    private void nextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextActionPerformed
        // > Button
        String token = this.Search.getText();
        if (token.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Search field is empty");
            return;
        }
        List<String> list = new ArrayList<>();
        for (int i = 0; i < this.Table.getRowCount(); i++) {
            list.add(this.Table.getValueAt(i, 1).toString());
        }
        int found;
        for (int i = 0; i < list.size(); i++) {
            if (list.get(i).contains(token) && matched < i) {
                matched = i;
                break;
            }
        }
        if (matched >= 0) {
            this.Table.changeSelection(matched, 1, false, false);
        } else {
            JOptionPane.showMessageDialog(this, token + " is not matched to tables.");
        }
    }//GEN-LAST:event_nextActionPerformed

    private void preActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_preActionPerformed
        // < Button
        String token = this.Search.getText();
        if (token.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Search field is empty");
            return;
        }
        List<String> list = new ArrayList<>();
        for (int i = 0; i < this.Table.getRowCount(); i++) {
            list.add(this.Table.getValueAt(i, 1).toString());
        }
        int found;
        for (int i = list.size() - 1; i >= 0; i--) {
            if (list.get(i).contains(token) && (matched > i || matched == -1)) {
                matched = i;
                break;
            }
        }
        if (matched >= 0 && matched < list.size()) {
            this.Table.changeSelection(matched, 1, false, false);
        } else {
            JOptionPane.showMessageDialog(this, token + " is not matched to tables.");
        }
    }//GEN-LAST:event_preActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RestoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RestoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RestoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RestoreMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RestoreMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JCheckBox BackupData;
    private javax.swing.JButton Change;
    private javax.swing.JButton Clear;
    private javax.swing.JComboBox<String> Dataserver;
    private javax.swing.JButton Fetch;
    private javax.swing.JButton FetchTables;
    private javax.swing.JButton Invert;
    private javax.swing.JButton New;
    private javax.swing.JTextField OutputFolder;
    private javax.swing.JPasswordField Password;
    private javax.swing.JButton Reset;
    private javax.swing.JButton Restore;
    private javax.swing.JButton Save;
    private javax.swing.JComboBox<String> Schema;
    private javax.swing.JTextField Search;
    private javax.swing.JButton SelectAll;
    private javax.swing.JTable Table;
    private javax.swing.JTextField URL;
    private javax.swing.JTextField Username;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton next;
    private javax.swing.JButton pre;
    // End of variables declaration//GEN-END:variables
}
